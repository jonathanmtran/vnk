scalar DateTime

type Query {
  queue(id: ID): Queue
  queues: [Queue!]!
  youTubeVideos(query: String!): [YouTubeVideo!]!
}

type Mutation {
  AddToQueue(input: AddToQueueInput!): QueueEntry!
  CreateQueue(input: CreateQueueInput!): Queue!
  DeleteQueue(input: DeleteQueueInput!): DeleteQueueResponse!
  DeleteQueueEntry(input: DeleteQueueEntryInput!): DeleteQueueResponse!
  UpdateQueueEntry(input: AddToQueueInput!): QueueEntry!
}

type Queue {
  id: ID
  name: String
  created: String
}

extend type Queue {
  queue: [QueueEntry!]
}

type QueueEntry {
  id: ID
  queueId: String
  name: String
  songName: String
  youTubeUrl: String
  created: DateTime
  performed: DateTime
  sort: String
}

type YouTubeVideo {
  id: String
  link: String
  title: String
  thumbnails: YouTubeVideoThumbnails
}

type YouTubeVideoThumbnail {
  url: String
  height: Int
  width: Int
}

type YouTubeVideoThumbnails {
  default: YouTubeVideoThumbnail
}

input AddToQueueInput {
  queueId: ID
  name: String
  songName: String
  youTubeUrl: String
}

extend input AddToQueueInput {
  id: ID
  performed: String
  sort: String
}

input CreateQueueInput {
  name: String!
}

input DeleteQueueInput {
  id: ID
}

input DeleteQueueEntryInput {
  queueId: ID
  id: ID
}

type DeleteQueueResponse {
  affectedRows: Int
}
